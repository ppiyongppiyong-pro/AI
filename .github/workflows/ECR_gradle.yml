name: Deploy to ECR

on:
  push:
    branches: [ main ]

jobs:

  build:
    name: Build Image
    runs-on: ubuntu-24.04

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t ppiyong .
          docker tag ppiyong:latest ${{ secrets.ECR_URI }}/ppiyong:latest
          docker push ${{ secrets.ECR_URI }}/ppiyong:latest

  transfer:
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Check directories before SCP
        run: ls -al ./rag_data && ls -al ./chroma_db

      - name: Clean remote directory before SCP
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            sudo rm -f /home/ubuntu/ppiyong-chatbot/docker-compose.yml

      - name: Transfer docker compose to EC2
        uses: appleboy/scp-action@master
        with:
            host: ${{ secrets.REMOTE_HOST }}
            username: ${{ secrets.REMOTE_USER }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            source: ./docker-compose.yml
            target: /home/ubuntu/ppiyong-chatbot/
            port: 22

  deploy:
    name: Deploy
    runs-on: ubuntu-24.04
    needs: transfer
    steps:
      - name: SSH into EC2 server and Deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # 1. cd
            mkdir -p ~/ppiyong-chatbot
            cd ~/ppiyong-chatbot

            # 2. .env file
            echo "${{ secrets.ENV }}" > .env
            sudo chmod 600 .env

            # 3. Copy docker-compose.yml
            sudo cp /home/ubuntu/ppiyong-chatbot/docker-compose.yml /home/ubuntu/docker-compose.yml

            #4. pull Image
            docker pull ${{ secrets.ECR_URI }}/ppiyong:latest

            # 3. docker compose
            docker compose down
            docker compose build --no-cache
            docker compose up -d