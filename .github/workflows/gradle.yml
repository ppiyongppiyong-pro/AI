name: Deploy with Docker

on:
  push:
    branches: [main]

env:
  DOCKER_IMAGES: ghcr.io/${{ secrets.ORG_NAME }}/ppiyong

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Docker login
      - name: Docker login in GHCR
        run: echo ${{ secrets.YOUYEON_GITHUB_PAT }} | docker login ghcr.io -u ${{ secrets.YOUYEON_GITHUB_USERNAME }} --password-stdin

      # Image Build
      - name: Build Docker image
        run: docker build -t ghcr.io/${{ secrets.ORG_NAME }}/ppiyong-chatbot:latest .

      # Docker container Push
      - name: Push Docker Image
        run: docker push ghcr.io/${{ secrets.ORG_NAME }}/ppiyong-chatbot:latest

  transfer:
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Transfer nginx directory file to ec2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ./nginx/
          target: /home/ubuntu/

  deploy:
    name: Deploy
    runs-on: ubuntu-24.04
    needs: transfer
    steps:
        - name: SSH into EC2 server and Deploy
          uses: appleboy/ssh-action@v1
          with:
              host: ${{ secrets.REMOTE_HOST }}
              username: ${{ secrets.REMOTE_USER }}
              key: ${{ secrets.SSH_PRIVATE_KEY }}
              port: 22
              script: |
                # 1. cd
                mkdir -p ~/ppiyong-chatbot
                cd ~/ppiyong-chatbot

                # 2. GHCR 로그인
                echo "${{ secrets.YOUYEON_GITHUB_PAT }}" | docker login ghcr.io -u ${{ secrets.YOUYEON_GITHUB_USERNAME }} --password-stdin

                # 3. pull image:latest
                docker pull ghcr.io/${{ secrets.ORG_NAME }}/ppiyong-chatbot:latest

                # 4. 기존의 container 중단
                docker rm -f ppiyong-chatbot || true
                
                # 4. restart container
                docker run -d \
                  --name ppiyong-chatbot \
                  -p 8000:8000 \
                  ghcr.io/${{ secrets.ORG_NAME }}/ppiyong-chatbot:latest

                # 7. remove oldest image
                docker image prune -a -f
